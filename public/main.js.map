{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chatbot/chatbot.component.html","./src/app/chatbot/chatbot.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'chatbotUI';\n}\n","<nb-layout>\n\n  <nb-layout-header fixed>\n  <!-- Insert header here -->\n  </nb-layout-header>\n\n  <nb-layout-column>\n    <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n    <!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n    <!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n    <!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n    <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n    <!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n    <!-- * * * * * * * to get started with your project! * * * * * * * * -->\n    <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n    <app-chatbot></app-chatbot>\n\n\n    <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n    <!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n    <!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n    <!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n    <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n    <!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n    <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n\n  <nb-layout-footer fixed>\n  <!-- Insert footer here -->\n  </nb-layout-footer>\n\n</nb-layout>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {NbThemeModule, NbLayoutModule, NbChatModule, NbSpinnerModule} from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { ChatbotComponent } from './chatbot/chatbot.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatbotComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NbThemeModule.forRoot({ name: 'default' }),\n    NbLayoutModule,\n    NbEvaIconsModule,\n    NbChatModule,\n    NbSpinnerModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<nb-chat title=\"Conversation with a bot\">\n<nb-chat-message *ngFor=\"let msg of messages\"\n                 type = \"text\"\n                 [message]=\"msg.text\"\n                 [reply]=\"msg.reply\"\n                 [sender]=\"msg.sender\"\n                 [date]=\"msg.date\"\n                 [avatar]=\"msg.avatar\"\n>\n\n</nb-chat-message>\n  <nb-chat-message *ngIf=\"loading\" [nbSpinner]=\"loading\" nbSpinnerStatus=\"info\"\n                   type=\"text\"\n                   avatar=\"/assets/bot.jpeg\"\n                   message=\"...\">\n\n  </nb-chat-message>\n\n  <nb-chat-form (send)=\"handleUserMessage($event)\" [dropFiles]=\"true\">\n  </nb-chat-form>\n\n</nb-chat>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nconst dialogflowURL = \"https://us-central1-dialogflow-d683a.cloudfunctions.net/dialogflowGateway\";\n\n@Component({\n  selector: 'app-chatbot',\n  templateUrl: './chatbot.component.html',\n  styleUrls: ['./chatbot.component.scss']\n})\nexport class ChatbotComponent implements OnInit {\n  messages:any[] = [];\n  loading:boolean = false;\n\n  sessionId = Math.random().toString(36).slice(-5);\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.addBotMessage('Human presence detected ðŸ¤–. How can I help you? ');\n  }\n\n  handleUserMessage(event: any) {\n    console.log(event);\n    const text = event.message;\n    this.addUserMessage(text);\n\n    this.loading = true;\n\n    // Make the request\n    this.http.post<any>(\n      dialogflowURL,\n      {\n        sessionId: this.sessionId,\n        queryInput: {\n          text: {\n            text,\n            languageCode: 'en-US'\n          }\n        }\n      }\n    )\n      .subscribe(res => {\n        const { fulfillmentText } = res;\n        this.addBotMessage(fulfillmentText);\n        this.loading = false;\n      });\n  }\n\n  addUserMessage(text: string): void {\n    // const sender: never = '';\n    // const date: never = {};\n\n    this.messages.push({\n      text,\n      sender: 'You',\n      reply: true,\n      date: new Date()\n    });\n  }\n\n  addBotMessage(text: string): void {\n    this.messages.push({\n      text,\n      sender: 'Bot',\n      avatar: '/assets/bot.png',\n      date: new Date(),\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}